#!/bin/bash
export LC_ALL=C
export ROOT=${ROOT:-$(pwd)}
export SDKROOT=${SDKROOT:-$ROOT}

export PYTHONDONTWRITEBYTECODE=1
export REBUILD=${REBUILD:-false}
export CI=${CI:-false}

export PYBUILD=${PYBUILD:-3.12}
export PYMAJOR=$(echo -n $PYBUILD|cut -d. -f1)
export PYMINOR=$(echo -n $PYBUILD|cut -d. -f2)

export HOST_PREFIX=${HOST_PREFIX:-${SDKROOT}/devices/$(arch)/usr}
export PREFIX=${PREFIX:-${SDKROOT}/devices/emsdk/usr}

mkdir -p ${SDKROOT}/build/pycache ${SDKROOT}/build/cache
export XDG_CACHE_HOME=$(realpath ${SDKROOT}/build/cache)
export PYTHONPYCACHEPREFIX=${PYTHONPYCACHEPREFIX:-$(realpath ${SDKROOT}/build/pycache)}


export HOME=${SDKROOT}

export HPY=${HOST_PREFIX}/bin/python${PYBUILD}
export HPIP="${HPY} -mpip"

# cpython build opts
export CPOPTS="-Os -g0 -fPIC"


if [ -f ${ROOT}/dev ]
then
    export COPTS="-O1 -g3 -fPIC"
    export QUIET=""
else
    export COPTS="-Os -g0 -fPIC"
    if ${VERBOSE:-false}
    then
        export QUIET=""
    else
        export QUIET="2>&1 > $PYTHONPYCACHEPREFIX/.log"
    fi
fi

# ============ emscripten ==============

# stable
# export EMFLAVOUR=3.1.34

# embind broke in 3.1.48-tot (coro suspend/resume)

# embding more broken in 3.1.51

#export EMFLAVOUR=${EMFLAVOUR:latest}
export EMFLAVOUR=${EMFLAVOUR:-tot}

# ============== wasi sdk ===============

# stable
WASI_SDK=${WASI_SDK:-20}
WASI_URL=https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_SDK}/wasi-sdk-${WASI_SDK}.0-linux.tar.gz

WASISDK="${SDKROOT}/wasisdk"


# =============== Nimrod ====================

# stable
NIM_VERSION=nim-2.0.2
NIM_URL=https://nim-lang.org/download/${NIM_VERSION}-linux_x64.tar.xz


NIM_VERSION=nim-git
NIM_URL=https://github.com/nim-lang/Nim

NIMSDK=${NIMSDK:-"${SDKROOT}/nimsdk"}


# base wasm features pure is "mvp" , "bi" is bigint

if [ -f /mvp ]
then
    export WASM_FLAVOUR=mvp
    export WASM_EXTRA="-sMIN_SAFARI_VERSION=120000"
    export WASM_PURE=true
else
    export WASM_FLAVOUR=bi

    # extra features. Safari 14 is expected to have BIGINT, ignore the emsdk warnings.
    export WASM_EXTRA="-sWASM_BIGINT -sMIN_SAFARI_VERSION=140100"

    # tell to not normalize modules.
    export WASM_PURE=false
fi

#temp fix for oom on CI (Error: Process completed with exit code 143.)
export EMSDK_NUM_CORES=1

export PYDK_PYTHON_HOST_PLATFORM=wasm32-${WASM_FLAVOUR}-emscripten

if echo $LD_LIBRARY_PATH |grep -q ${HOST_PREFIX}/lib
then
    # config already set
    echo -n
else
    OLDPATH=${PATH}

    PATH=/usr/bin:/bin
    for extrabin in /usr/local/bin /opt/bin
    do
        if echo $PATH|grep -q ":$extrabin"
        then
            continue
        fi

        if [ -d $extrabin ]
        then
            PATH=$extrabin:$PATH
        fi
    done


    # this is python used for emsdk : ${SYS_PYTHON} -> ${EMSDK_PYTHON}
    for py in 10 9 8 7
    do
        if command -v python${PYMAJOR}.${py} >/dev/null
        then
            export SYS_PYTHON=$(command -v python${PYMAJOR}.${py})
            break
        else
            # sane default
            export SYS_PYTHON=$(command -v python${PYMAJOR})
        fi
    done

    export GITGET="git clone --recursive --no-tags --depth 1 --single-branch --branch"
    export LD_LIBRARY_PATH="${HOST_PREFIX}/lib:$LD_LIBRARY_PATH"
    export PATH="${HOST_PREFIX}/bin:$PATH:$OLDPATH"
fi
